{"version":3,"sources":["assets/favicon.png","components/Balloon.js","App.js"],"names":["module","exports","windowHeight","Dimensions","get","height","Balloon","props","state","visible","bursted","moveAnimation","Animated","ValueXY","x","y","sequence","timing","toValue","duration","start","finished","onFinish","id","setState","onClick","bind","this","onBurst","stop","View","TouchableWithoutFeedback","onPress","Image","source","style","width","getLayout","PureComponent","defaultProps","e","console","log","windowWidth","styles","App","useState","finishedCount","updateFinishedCount","burstCount","updateBurstCount","container","Text","map","index","key","require","StyleSheet","create","backgroundColor"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,qC,moBCG3C,IAAMC,EAAeC,IAAWC,IAAI,UAAUC,OAEzBC,E,gCACnB,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAS,EACTC,SAAS,GAGX,EAAKC,cAAgB,IAAIC,IAASC,QAAQ,CAAEC,EAAGP,EAAMO,EAAGC,EAAGb,IAC3DU,IAASI,SAAS,CAChBJ,IAASK,OAAO,EAAKN,cAAe,CAClCO,QAAS,CAACJ,EAAGP,EAAMO,EAAGC,EAAG,GACzBI,SAAUZ,EAAMY,aAEjBC,OAAM,YAAkB,EAAfC,WAER,EAAKd,MAAMe,SAAU,EAAKf,MAAMgB,IAChC,EAAKC,SAAU,CAACf,SAAS,QAI7B,EAAKgB,QAAU,EAAKA,QAAQC,KAAb,QArBE,E,8CAwBR,IAAD,OACNC,KAAKH,SAAS,CACZd,SAAS,EACTD,SAAS,IACR,WACC,EAAKF,MAAMqB,QAAS,EAAKrB,MAAMgB,IAC/BX,IAASK,OACP,EAAKN,eACLkB,Y,+BAKR,OACE,kBAACC,EAAA,EAAD,KAEEH,KAAKnB,MAAMC,QACR,kBAACsB,EAAA,EAAD,CAA0BC,QAASL,KAAKF,SACvC,kBAACb,EAAA,EAASqB,MAAV,CAAgBC,OAAQP,KAAKpB,MAAM2B,OAAQC,MAAO,CAAC,CAACC,MAAO,GAAK/B,OAAQ,IAAKsB,KAAKhB,cAAc0B,gBAElG,U,GA7C2BC,iBAoDrChC,EAAQiC,aAAe,CACnBhB,GAAI,EACJT,EAAG,GACHQ,SAAU,SAACkB,GAAQC,QAAQC,IAAI,WAAYF,IAC3CN,OAAQ,GACRf,SAAU,IACVS,QAAS,SAACY,GAAQC,QAAQC,IAAI,UAAWF,KC5D7C,IAAMG,EAAcxC,IAAWC,IAAI,UAAUgC,MACvClC,EAAeC,IAAWC,IAAI,UAAUC,OA0CxCuC,GAFSC,IAtCF,WAAO,IAAD,EAC8BC,mBAAU,GADxC,WACTC,EADS,KACMC,EADN,OAEwBF,mBAAU,GAFlC,WAETG,EAFS,KAEGC,EAFH,KAIjB,OAAI,EAAIH,EAEJ,kBAACjB,EAAA,EAAD,CAAMK,MAAOS,EAAOO,WAClB,kBAACC,EAAA,EAAD,+BAGMH,EAAaF,IAAkB,EAEvC,kBAACjB,EAAA,EAAD,CAAMK,MAAOS,EAAOO,WAClB,kBAACC,EAAA,EAAD,iCAAgCH,EAAhC,WAAqDA,EAAaF,IAKpE,kBAACjB,EAAA,EAAD,CAAMK,MAAOS,EAAOO,WAEhB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGE,KAAK,SAAAC,GACjB,OACE,kBAAC,EAAD,CACEC,IAAQD,EACR/B,GAAM+B,EACNxC,EAAQ6B,EAAc,GAAOW,EAC7BpB,OAAQsB,EAAQ,KAChBlC,SAAa,SAACkB,GAAQQ,EAAqBD,EAAgB,IAC3DnB,QAAY,SAACY,GAAQU,EAAkBD,EAAa,IACpD9B,SAAa,IAAOmC,SAWrBG,IAAWC,OAAO,CAC/BP,UAAW,CACTQ,gBAAiB,UACjBtD,OAAQH,O","file":"static/js/app.64102fd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","import React, { PureComponent } from 'react';\nimport { Animated, TouchableWithoutFeedback, View, Dimensions } from 'react-native';\n\nconst windowHeight = Dimensions.get('window').height; // can be used to find coordinates\n\nexport default class Balloon extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      visible: true,\n      bursted: false\n    }\n\n    this.moveAnimation = new Animated.ValueXY({ x: props.x, y: windowHeight })\n    Animated.sequence([\n      Animated.timing(this.moveAnimation, {\n        toValue: {x: props.x, y: 0},\n        duration: props.duration\n      })\n    ]).start(({ finished }) => {\n      if( finished ) {\n        this.props.onFinish( this.props.id );\n        this.setState( {visible: false} );\n      }\n    });\n\n    this.onClick = this.onClick.bind( this );\n  }\n\n  onClick() {\n      this.setState({\n        bursted: true,\n        visible: false\n      }, () => {\n          this.props.onBurst( this.props.id );\n          Animated.timing(\n            this.moveAnimation\n          ).stop();\n      });\n  }\n\n  render() {\n    return (\n      <View > \n      {\n        this.state.visible ?\n          (<TouchableWithoutFeedback onPress={this.onClick}>\n            <Animated.Image source={this.props.source} style={[{width: 50,  height: 50}, this.moveAnimation.getLayout()]}/>\n          </TouchableWithoutFeedback>) \n        : null\n      }\n      \n      </View>\n    );\n  }\n}\nBalloon.defaultProps = {\n    id: 1,\n    x: 10,\n    onFinish: (e) => { console.log('finished', e) },\n    source: '',\n    duration: 5000,\n    onBurst: (e) => { console.log('Bursted', e) },\n};\n\n","import React, { useState } from 'react';\nimport { View, StyleSheet, Dimensions, Text } from 'react-native';\nimport Balloon from './components/Balloon';\nconst windowWidth = Dimensions.get('window').width; // can be used to find coordinates\nconst windowHeight = Dimensions.get('window').height; // can be used to find coordinates\n\nconst App  = () => {\n  const [ finishedCount, updateFinishedCount ] = useState( 0 );\n  const [ burstCount, updateBurstCount ] = useState( 0 );\n\n  if( 3 < finishedCount ) {\n    return (\n      <View style={styles.container}>\n        <Text>Better Luck next time</Text>\n      </View>\n    );\n  } else if ( burstCount + finishedCount === 6 ) {\n    return (\n      <View style={styles.container}>\n        <Text>Well done total score is {burstCount} out of { burstCount + finishedCount }</Text>\n      </View>\n    );\n  }\n    return (\n      <View style={styles.container}>\n        {\n          [2,3,4,5,6,7].map( index => {\n            return (\n              <Balloon\n                key = { index }\n                id = {index}\n                x = { ( windowWidth / 10 ) * index }\n                source={require('./assets/favicon.png')}\n                onFinish = { (e) => { updateFinishedCount( finishedCount + 1 ) } }\n                onBurst = { (e) => { updateBurstCount( burstCount + 1 ) } }\n                duration = { 2000 * index }\n              />\n            );\n          } )\n        }\n      </View>\n    );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ecf0f1',\n    height: windowHeight\n  },\n});\n\n"],"sourceRoot":""}