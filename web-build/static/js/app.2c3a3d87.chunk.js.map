{"version":3,"sources":["assets/favicon.png","components/Balloon.js","App.js"],"names":["module","exports","windowHeight","Dimensions","get","height","Balloon","props","state","visible","bursted","moveAnimation","Animated","ValueXY","x","y","sequence","timing","toValue","duration","start","finished","onFinish","id","setState","onClick","bind","this","onBurst","stop","View","style","position","TouchableWithoutFeedback","onPress","Image","source","width","getLayout","PureComponent","defaultProps","e","console","log","windowWidth","BalloonsWrapper","memo","map","key","index","require","styles","App","useState","finishedCount","updateFinishedCount","burstCount","updateBurstCount","SafeAreaView","container","Text","textView","StyleSheet","create","backgroundColor","overflow","display","justifyContent","alignItems","text","textAlign"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,qC,2oBCG3C,IAAMC,EAAeC,IAAWC,IAAI,UAAUC,OAEzBC,E,gCACnB,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAS,EACTC,SAAS,GAGX,EAAKC,cAAgB,IAAIC,IAASC,QAAQ,CAAEC,EAAGP,EAAMO,EAAGC,EAAGb,IAC3DU,IAASI,SAAS,CAChBJ,IAASK,OAAO,EAAKN,cAAe,CAClCO,QAAS,CAACJ,EAAGP,EAAMO,EAAGC,EAAG,GACzBI,SAAUZ,EAAMY,aAEjBC,OAAM,YAAkB,EAAfC,WAER,EAAKd,MAAMe,SAAU,EAAKf,MAAMgB,IAChC,EAAKC,SAAU,CAACf,SAAS,QAI7B,EAAKgB,QAAU,EAAKA,QAAQC,KAAb,QArBE,E,8CAwBR,IAAD,OACNC,KAAKH,SAAS,CACZd,SAAS,EACTD,SAAS,IACR,WACC,EAAKF,MAAMqB,QAAS,EAAKrB,MAAMgB,IAC/BX,IAASK,OACP,EAAKN,eACLkB,Y,+BAKR,OACIF,KAAKnB,MAAMC,QAEP,kBAACqB,EAAA,EAAD,CAAMC,MAAU,CAACC,SAAU,aACzB,kBAACC,EAAA,EAAD,CAA0BC,QAASP,KAAKF,SACtC,kBAACb,EAAA,EAASuB,MAAV,CAAgBC,OAAQT,KAAKpB,MAAM6B,OAAQL,MAAO,CAAC,CAACM,MAAO,GAAKhC,OAAQ,IAAKsB,KAAKhB,cAAc2B,iBAItG,S,GA/C2BC,iBAmDrCjC,EAAQkC,aAAe,CACnBjB,GAAI,EACJT,EAAG,GACHQ,SAAU,SAACmB,GAAQC,QAAQC,IAAI,WAAYF,IAC3CL,OAAQ,GACRjB,SAAU,IACVS,QAAS,SAACa,GAAQC,QAAQC,IAAI,UAAWF,KC3D7C,IAAMG,EAAczC,IAAWC,IAAI,UAAUiC,MAGvCQ,GAFe1C,IAAWC,IAAI,UAAUC,OAEtByC,gBAAM,SAAEvC,GAC9B,MACE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGwC,KAAK,SAAEC,EAAKC,GACxB,OACE,kBAAC,EAAD,CACED,IAAQA,EACRzB,GAAOyB,EACPlC,EAAQ8B,EAAc,IAASK,EAAQ,GACvCb,OAAQc,EAAQ,KAChB5B,SAAaf,EAAMe,SACnBM,QAAYrB,EAAMqB,QAClBT,SAAa,IAAO6B,WA4CxBG,GAFSC,IAnCF,WAAO,IAAD,EAC8BC,mBAAU,GADxC,WACTC,EADS,KACMC,EADN,OAEwBF,mBAAU,GAFlC,WAETG,EAFS,KAEGC,EAFH,KAYjB,OAAI,EAAIH,EAEJ,kBAACI,EAAA,EAAD,CAAc3B,MAAOoB,EAAOQ,WAC1B,kBAACC,EAAA,EAAD,CAAM7B,MAASoB,EAAOU,UAAtB,0BAGML,EAAaF,IAAkB,EAEvC,kBAACI,EAAA,EAAD,CAAc3B,MAAOoB,EAAOQ,WAC1B,kBAACC,EAAA,EAAD,CAAM7B,MAASoB,EAAOU,UAAtB,4BAA2DL,EAA3D,WAAgFA,EAAaF,IAK/F,kBAACI,EAAA,EAAD,CAAc3B,MAAOoB,EAAOQ,WAC1B,kBAACd,EAAD,CACEvB,SAxBS,SAACmB,GAChBc,EAAqBD,EAAgB,IAwB/B1B,QArBQ,SAACa,GACfgB,EAAkBD,EAAa,QA4BpBM,IAAWC,OAAO,CAC/BJ,UAAW,CACTK,gBAAiB,UACjB3D,OAAQ,OACR4D,SAAU,UAEZJ,SAAU,CACRK,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ/D,OAAQ,QAEVgE,KAAM,CACJC,UAAW,SACXH,eAAgB,c","file":"static/js/app.2c3a3d87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","import React, { PureComponent } from 'react';\nimport { Animated, TouchableWithoutFeedback, Dimensions, View } from 'react-native';\n\nconst windowHeight = Dimensions.get('window').height; // can be used to find coordinates\n\nexport default class Balloon extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      visible: true,\n      bursted: false\n    }\n\n    this.moveAnimation = new Animated.ValueXY({ x: props.x, y: windowHeight })\n    Animated.sequence([\n      Animated.timing(this.moveAnimation, {\n        toValue: {x: props.x, y: 0},\n        duration: props.duration\n      })\n    ]).start(({ finished }) => {\n      if( finished ) {\n        this.props.onFinish( this.props.id );\n        this.setState( {visible: false} );\n      }\n    });\n\n    this.onClick = this.onClick.bind( this );\n  }\n\n  onClick() {\n      this.setState({\n        bursted: true,\n        visible: false\n      }, () => {\n          this.props.onBurst( this.props.id );\n          Animated.timing(\n            this.moveAnimation\n          ).stop();\n      });\n  }\n\n  render() {\n    return (\n        this.state.visible ?\n          (\n            <View style = { {position: 'absolute'} } >\n              <TouchableWithoutFeedback onPress={this.onClick}>\n                <Animated.Image source={this.props.source} style={[{width: 50,  height: 50}, this.moveAnimation.getLayout()]}/>\n              </TouchableWithoutFeedback>\n            </View>\n          )\n        : null\n    );\n  }\n}\nBalloon.defaultProps = {\n    id: 1,\n    x: 10,\n    onFinish: (e) => { console.log('finished', e) },\n    source: '',\n    duration: 5000,\n    onBurst: (e) => { console.log('Bursted', e) },\n};\n\n","import React, { useState, memo } from 'react';\nimport { SafeAreaView, StyleSheet, Dimensions, Text } from 'react-native';\nimport Balloon from './components/Balloon';\nconst windowWidth = Dimensions.get('window').width; // can be used to find coordinates\nconst windowHeight = Dimensions.get('window').height; // can be used to find coordinates\n\nconst BalloonsWrapper = memo( ( props ) => {\n  return (\n    [3,8,7,5,6,4].map( ( key, index ) => {\n      return (\n        <Balloon\n          key = { key }\n          id = { key }\n          x = { ( windowWidth / 10 ) * ( index + 1 ) }\n          source={require('./assets/favicon.png')}\n          onFinish = { props.onFinish }\n          onBurst = { props.onBurst }\n          duration = { 2000 * key }\n        />\n      );\n    } )\n  );\n} );\n\nconst App  = () => {\n  const [ finishedCount, updateFinishedCount ] = useState( 0 );\n  const [ burstCount, updateBurstCount ] = useState( 0 );\n\n  const onFinish = (e) => {\n    updateFinishedCount( finishedCount + 1 )\n  }\n\n  const onBurst = (e) => {\n    updateBurstCount( burstCount + 1 )\n  };\n\n  if( 3 < finishedCount ) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style = {styles.textView}>Better Luck next time</Text>\n      </SafeAreaView>\n    );\n  } else if ( burstCount + finishedCount === 6 ) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style = {styles.textView} >Well done total score is {burstCount} out of { burstCount + finishedCount }</Text>\n      </SafeAreaView>\n    );\n  }\n    return (\n      <SafeAreaView style={styles.container}>\n        <BalloonsWrapper\n          onFinish = { onFinish }\n          onBurst = { onBurst }\n        />\n      </SafeAreaView>\n    );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ecf0f1',\n    height: '100%',\n    overflow: 'hidden'\n  },\n  textView: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%'\n  },\n  text: {\n    textAlign: 'center',\n    justifyContent: 'center'\n  }\n});\n\n"],"sourceRoot":""}